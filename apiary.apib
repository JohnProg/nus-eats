FORMAT: 1A

# nuseats

# Group Login

## Authentication [/authentication/login]

### (DONE) Get JWT from FB User Access Token [POST]

+ Request JSON

    + Headers

            Content-Type: application/json

    + Body

            {   
                "accessToken": "EAABzvgZBDLz4BAM617uSUddJJ2hWrnxSQcExGQF85bUvGdnbP6aP4Ey"
            }

+ Response 200 (application/json)

    + Body 

            {
                "token": "eyJhbGciOiJIUzI1NiIsInR5cC",
                "facebookToken": "EAABzvgZBDLz4BAM617uSUddJJ2hWrnxSQcExGQF85bUvGdnbP6aP4Ey"
            }

# Group Canteens

## Canteen Collection [/canteens]

### (DONE) Get all Canteens [GET]

+ Request JSON

    + Headers
    
            Authorization: Bearer <jwt>
            Accept: application/json

+ Response 200 (application/json)

    + Body

            {
                "canteens": [
                    {
                        "id": 3,
                        "name": "PGP E-Canteen",
                        "latitude": 1.2907629,
                        "longitude": 103.78228426,
                        "created_at": "2017-08-23T16:00:00.000Z",
                        "updated_at": "2017-08-23T16:00:00.000Z",
                        "crowd_value": 0.1497255
                    }
                ]
            }

## Stall Collection [/canteens/{id}/stalls]

### (ALMOST DONE) Get all Stalls belonging to a Canteen [GET]

+ Request JSON

    + Headers
    
            Authorization: Bearer <jwt>
            Accept: application/json

+ Response 200 (application/json)

    + Body

            {
                "stalls": [
                    {
                        "id": 1,
                        "name": "Dickson's North Indian Halal Food",
                        "created_at": "2017-08-23T16:00:00.000Z",
                        "updated_at": "2017-08-23T16:00:00.000Z",
                        "canteen_id": 1,
                        "average_rating": 2.75
                        "image": {
                            "id": 1,
                            "url": "/images/image.jpeg",
                            "mimetype": "image/jpeg",
                            "liked_users": [3, 4, 45, 47, 52],
                            "user_id": 5,
                            "stall_id": 1,
                            "created_at": "2017-08-23T16:00:00.000Z",
                            "updated_at": "2017-08-23T16:00:00.000Z"
                        }
                    }
                ]
            }

# Group Stalls

## Stall [/stalls/{id}]

### (DONE) Get a Stall [GET]

+ Request JSON

    + Headers
    
            Authorization: Bearer <jwt>
            Accept: application/json

+ Response 200 (application/json)

    + Body
        
            {
                "stall": {
                    "id": 1,
                    "name": "Dickson's North Indian Halal Food",
                    "created_at": "2017-08-23T16:00:00.000Z",
                    "updated_at": "2017-08-23T16:00:00.000Z",
                    "canteen_id": 1,
                    "average_rating": 2.75
                }
            }

## Ratings Collection [/stalls/{id}/ratings]

### (DONE) Get all Ratings of a Stall [GET]

+ Request JSON

    + Headers
    
            Authorization: Bearer <jwt>
            Accept: application/json

+ Response 200 (application/json)

    + Body

            {
                "ratings": [
                    {
                        "id": 2,
                        "value": 2,
                        "user_id": "8775234563",
                        "created_at": "2017-08-23T16:00:00.000Z",
                        "updated_at": "2017-08-23T16:00:00.000Z",
                        "stall_id": 1
                    }
                ]
            }

### (NOT DONE) Add user Ratings to a Stall [POST]

+ Request JSON

    + Headers
    
            Authorization: Bearer <jwt>
            Accept: application/json

    + Body

            {
                "value": 3
            }

+ Response 200 (application/json)

## Images Collection [/stalls/{id}/images]

### (NOT DONE) Get all Images of a Stall [GET]

+ Request JSON

    + Headers
    
            Authorization: Bearer <jwt>
            Accept: application/json

+ Response 200 (application/json)

    + Body

            {
                "images": [
                    {
                        "id": 1,
                        "url": "/images/image.jpeg",
                        "mimetype": "image/jpeg",
                        "liked_users": [3, 4, 45, 47, 52],
                        "user_id": 5,
                        "stall_id": 1,
                        "created_at": "2017-08-23T16:00:00.000Z",
                        "updated_at": "2017-08-23T16:00:00.000Z"
                    }
                ]
            }

# Group Users

## Appointment Collection [/user/{id}/appointments]

### (NOT DONE) Get all appointments of a User [GET]

+ Request JSON

    + Headers
    
            Authorization: Bearer <jwt>
            Accept: application/json

+ Response 200 (application/json)

    + Body

            {
                "appointments": [
                    {
                        "id": 1,
                        "status": "upcoming",
                        "attendees": [1, 7, 33, 57],
                        "canteen_id": 1,
                        "user_id": 1,
                        "start_time": "140920171300",
                        "end_time": "140920171400",
                        "created_at": "2017-08-23T16:00:00.000Z",
                        "updated_at": "2017-08-23T16:00:00.000Z",
                    }
                ]
            }

## Image Collection [/user/{id}/images]

### (NOT DONE) Get all images uploaded by a User [GET]

+ Request JSON

    + Headers
    
            Authorization: Bearer <jwt>
            Accept: application/json

+ Response 200 (application/json)

    + Body

            {
                "images": [
                    {
                        "id": 1,
                        "url": "/images/image.jpeg",
                        "mimetype": "image/jpeg",
                        "liked_users": [3, 4, 45, 47, 52],
                        "user_id": 5,
                        "stall_id": 1,
                        "created_at": "2017-08-23T16:00:00.000Z",
                        "updated_at": "2017-08-23T16:00:00.000Z"
                    }
                ]
            }

## Friend Collection [/user/{id}/friends]

### (NOT DONE) Get all friends of a User [GET]

+ Request JSON

    + Headers
    
            Authorization: Bearer <jwt>
            Accept: application/json

+ Response 200 (application/json)

    + Body

            {
                "friends": [
                    {
                        "id": 877363648,
                        "name": "John Connor"
                    }
                ]
            }

# Group Images

## Image Upload [/images]

### (NOT DONE) Upload an Image [POST]

+ Request JSON

    + Headers
    
            Authorization: Bearer <jwt>
            Accept: multipart/form-data
    
+ Response 201 (application/json)

## Image [/images/{id}]

### (NOT DONE) Like an Image [PATCH]

+ Request JSON

    + Headers
    
            Authorization: Bearer <jwt>
            Accept: application/json

+ Response 200 (application/json)

### (NOT DONE) Delete an Image [DELETE]

+ Request JSON

    + Headers
    
            Authorization: Bearer <jwt>
            Accept: application/json

+ Response 200 (application/json)

# Group Appointments

## Appointment Upload [/appointments]

### (NOT DONE) Create an Appointment [POST]

+ Request JSON

    + Headers
    
            Authorization: Bearer <jwt>
            Accept: application/json
    
    + Body 

            {
                "appointment": {
                    "status": "upcoming",
                    "canteen_id": 1,
                    "start_time": "140920171300",
                    "end_time": "140920171400"
                }
            }
    
+ Response 201 (application/json)

## Appointment [/appointments/{id}]

### (NOT DONE) Join an Appointment [PATCH]

+ Request JSON

    + Headers
    
            Authorization: Bearer <jwt>
            Accept: application/json

+ Response 200 (application/json)

### (NOT DONE) Delete an Appointment [DELETE]

+ Request JSON

    + Headers
    
            Authorization: Bearer <jwt>
            Accept: application/json

+ Response 200 (application/json)
