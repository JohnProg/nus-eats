FORMAT: 1A

# nuseats

# Group Canteens

## Canteen Collection [/canteens]

### Retrieve all Canteens [GET]

+ Request JSON

    + Headers
    
            Authorization: Bearer <jwt>
            Accept: application/json

+ Response 200 (application/json)

    + Body

            {
                "canteens": [
                    {
                        "id": 1,
                        "name": "Techno Edge",
                        "latitude": 51.503362,
                        "longtitude": -0.1276250,
                    }
                ]
            }

## Store Collection [/canteens/{id}/stores]

### Retrieve all Stores belonging to a Canteen [GET]

+ Request JSON

    + Headers
    
            Authorization: Bearer <jwt>
            Accept: application/json

+ Response 200 (application/json)

    + Body

            {
                "stores": [
                    {
                        "id": 1,
                        "name": "Ah Huat's Chicken Rice",
                        "stars": 3.5,
                        "image": {
                            "id": 1,
                            "url": "/images/image.jpeg",
                            "mimetype": "image/jpeg",
                            "liked_users": [3, 4, 45, 47, 52],
                            "user_id": 5
                        }
                    }
                ]
            }

# Group Stores

## Store [/stores/{id}]

### Retrieve a Store [GET]

+ Request JSON

    + Headers
    
            Authorization: Bearer <jwt>
            Accept: application/json

+ Response 200 (application/json)

    + Body
        
            {
                "id": 1,
                "name": "Ah Huat's Chicken Rice",
                "stars": 3.5,
                "images": [
                    {
                        "id": 1,
                        "url": "/images/image.jpeg",
                        "mimetype": "image/jpeg",
                        "liked_users": [3, 4, 45, 47, 52],
                        "user_id": 5
                    }
                ],
            }

## Review Collection [/stores/{id}/reviews]

### Retrieve all reviews of a Store [GET]

+ Request JSON

    + Headers
    
            Authorization: Bearer <jwt>
            Accept: application/json

+ Response 200 (application/json)

    + Body

            {
                "reviews": [
                    "id": 1,
                    "review": "This store is food-king good!",
                    "stars": 4,
                    "user_id": 5,
                    "store_id": 3
                ]
            }

# Group Users

## User [/user/{id}]

### Retrieve a User [GET]

+ Request JSON

    + Headers
    
            Authorization: Bearer <jwt>
            Accept: application/json

+ Response 200 (application/json)

    + Body

            {
                "name": "John Connor"
            }

## Appointment Collection [/user/{id}/appointments]

### Retrieve all appointments of a User [GET]

+ Request JSON

    + Headers
    
            Authorization: Bearer <jwt>
            Accept: application/json

+ Response 200 (application/json)

    + Body

            {
                "appointments": [
                    {
                        "id": 1,
                        "status": "upcoming",
                        "attendees": [1, 7, 33, 57],
                        "canteen_id": 1,
                        "user_id": 1,
                        "start_time": "140920171300",
                        "end_time": "140920171400"
                    }
                ]
            }

## Review Collection [/user/{id}/reviews]

### Retrieve all reviews by a User [GET]

+ Request JSON

    + Headers
    
            Authorization: Bearer <jwt>
            Accept: application/json

+ Response 200 (application/json)

    + Body

            {
                "reviews": [
                    {
                        "id": 1,
                        "review": "This store is food-king good!",
                        "stars": 5, 
                        "user_id": 7
                    }
                ]
            }

## Image Collection [/user/{id}/images]

### Retrieve all images uploaded by a User [GET]

+ Request JSON

    + Headers
    
            Authorization: Bearer <jwt>
            Accept: application/json

+ Response 200 (application/json)

    + Body

            {
                "images": [
                    {
                        "id": 1,
                        "url": "/images/image.jpeg",
                        "mimetype": "image/jpeg",
                        "liked_users": [3, 4, 45, 47, 52],
                        "user_id": 5
                    }
                ]
            }

## Friend Collection [/user/{id}/friends]

### Retrieve all friends of a User [GET]

+ Request JSON

    + Headers
    
            Authorization: Bearer <jwt>
            Accept: application/json

+ Response 200 (application/json)

    + Body

            {
                "friends": [
                    {
                        "id": 55,
                        "name": "John Connor"
                    }
                ]
            }

# Group Images

## Image Upload [/images]

### Create an Image [POST]

+ Request JSON

    + Headers
    
            Authorization: Bearer <jwt>
            Accept: multipart/form-data
    
+ Response 201 (application/json)

    + Body

            {
                "image": {
                    "id": 1,
                    "url": "/images/image.jpeg",
                    "mimetype": "image/jpeg",
                    "liked_users": [],
                    "user_id": 5
                }
            }

## Image [/images/{id}]

### Like an Image [PATCH]

+ Request JSON

    + Headers
    
            Authorization: Bearer <jwt>
            Accept: application/json

+ Response 200 (application/json)

    + Body

            {
                "image": {
                    "id": 1,
                    "url": "/images/image.jpeg",
                    "mimetype": "image/jpeg",
                    "liked_users": [3, 4, 45, 47, 52, 33],
                    "user_id": 5
                }
            }

### Delete an Image [DELETE]

+ Request JSON

    + Headers
    
            Authorization: Bearer <jwt>
            Accept: application/json

+ Response 200 (application/json)

# Group Appointments

## Appointment Upload [/appointments]

### Create an Appointment [POST]

+ Request JSON

    + Headers
    
            Authorization: Bearer <jwt>
            Accept: application/json
    
    + Body 

            {
                "appointment": {
                    "status": "upcoming",
                    "canteen_id": 1,
                    "start_time": "140920171300",
                    "end_time": "140920171400"
                }
            }
    
+ Response 201 (application/json)

    + Body

            {
                "appointment": {
                    "id": 1,
                    "status": "upcoming",
                    "attendees": [1],
                    "canteen_id": 1,
                    "user_id": 1,
                    "start_time": "140920171300",
                    "end_time": "140920171400"
                }
            }

## Appointment [/appointments/{id}]

### Join an Appointment [PATCH]

+ Request JSON

    + Headers
    
            Authorization: Bearer <jwt>
            Accept: application/json

+ Response 200 (application/json)

    + Body

            {
                "appointment": {
                    "id": 1,
                    "status": "upcoming",
                    "attendees": [1, 7, 33, 57, 67],
                    "canteen_id": 1,
                    "user_id": 1,
                    "start_time": "140920171300",
                    "end_time": "140920171400"
                }
            }

### Delete an Appointment [DELETE]

+ Request JSON

    + Headers
    
            Authorization: Bearer <jwt>
            Accept: application/json

+ Response 200 (application/json)

# Group Reviews

## Review Upload [/reviews]

### Create a Review [POST]

+ Request JSON

    + Headers
    
            Authorization: Bearer <jwt>
            Accept: application/json
    
    + Body 

            {
                "review": {
                    "review": "This store is food-king good!",
                    "stars": 4,
                    "store_id": 3
                }
            }
    
+ Response 201 (application/json)

            {
                "review": {
                    "id": 1,
                    "review": "This store is food-king good!",
                    "stars": 4,
                    "user_id": 5,
                    "store_id": 3
                }
            }

## Review [/reviews/{id}]

### Edit a Review [PATCH]

+ Request JSON

    + Headers
    
            Authorization: Bearer <jwt>
            Accept: application/json

    + Body

            {
                "review": {
                    "id": 1,
                    "review": "This store became terrible!",
                    "stars": 2
                }
            }

+ Response 200 (application/json)

    + Body

            {
                "review": {
                    "id": 1,
                    "review": "This store became terrible!",
                    "stars": 2,
                    "user_id": 5,
                    "store_id": 3
                }
            }

### Delete a Review [DELETE]

+ Request JSON

    + Headers
    
            Authorization: Bearer <jwt>
            Accept: application/json

+ Response 200 (application/json)