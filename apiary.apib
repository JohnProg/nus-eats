FORMAT: 1A

# nuseats

# Group Login

## Authentication [/authentication/login]

### (DONE) Get JWT from FB User Access Token [POST]

+ Request JSON

    + Headers

            Content-Type: application/json

    + Body

            {
                "accessToken": "EAABzvgZBDLz4BAM617uSUddJJ2hWrnxSQcExGQF85bUvGdnbP6aP4Ey"
            }

+ Response 200 (application/json)

    + Body

            {
                "token": "eyJhbGciOiJIUzI1NiIsInR5cC",
                "facebookToken": "EAABzvgZBDLz4BAM617uSUddJJ2hWrnxSQcExGQF85bUvGdnbP6aP4Ey"
            }

+ Response 401 (application/json)

    + Body

            {
                "statusCode": 401,
                "error": "Unauthorized",
                "message": "Invalid access token."
            }

# Group Canteens

## Canteen Collection [/canteens]

### (DONE) Get all Canteens [GET]

+ Request JSON

    + Headers

            Authorization: Bearer <jwt>
            Accept: application/json

+ Response 200 (application/json)

    + Body

            {
                "canteens": [
                    {
                        "id": 3,
                        "name": "PGP E-Canteen",
                        "latitude": 1.2907629,
                        "longitude": 103.78228426,
                        "created_at": "2017-08-23T16:00:00.000Z",
                        "updated_at": "2017-08-23T16:00:00.000Z",
                        "crowd_value": 0.1497255
                    }
                ]
            }

+ Response 200 (application/json)

    + Body

            {
                "canteens": []
            }


+ Response 502 (application/json)

    + Body
            {
                "statusCode": 502,
                "error": "Bad Gateway",
                "message": "Problems connecting to database."
            }

+ Response 502 (application/json)

    + Body
            {
                "statusCode": 502,
                "error": "Bad Gateway",
                "message": "Unknown Sequelize error."
            }

## Stall Collection [/canteens/{id}/stalls]

### (ALMOST DONE) Get all Stalls belonging to a Canteen [GET]

+ Request JSON

    + Headers

            Authorization: Bearer <jwt>
            Accept: application/json

+ Response 200 (application/json)

    + Body

            {
                "stalls": [
                    {
                        "id": 1,
                        "name": "Dickson's North Indian Halal Food",
                        "created_at": "2017-08-23T16:00:00.000Z",
                        "updated_at": "2017-08-23T16:00:00.000Z",
                        "canteen_id": 1,
                        "average_rating": 2.75
                        "image": {
                            "id": 1,
                            "url": "/images/image.jpeg",
                            "mimetype": "image/jpeg",
                            "liked_users": [3, 4, 45, 47, 52],
                            "user_id": 5,
                            "stall_id": 1,
                            "created_at": "2017-08-23T16:00:00.000Z",
                            "updated_at": "2017-08-23T16:00:00.000Z"
                        }
                    }
                ]
            }

+ Response 200 (application/json)

    + Body

            {
                "stalls": []
            }

+ Response 502 (application/json)

    + Body
            {
                "statusCode": 502,
                "error": "Bad Gateway",
                "message": "Problems connecting to database."
            }

+ Response 502 (application/json)

    + Body
            {
                "statusCode": 502,
                "error": "Bad Gateway",
                "message": "Unknown Sequelize error."
            }

# Group Stalls

## Stall Collection [/stalls]

## (DONE) Get all stalls [GET]

+ Request JSON

    + Headers

            Authorization: Bearer <jwt>
            Accept: application/json

+ Response 200 (application/json)

    + Body

            {
                "stalls": [
                    {
                        "id": 1,
                        "name": "Dickson's North Indian Halal Food",
                        "created_at": "2017-08-23T16:00:00.000Z",
                        "updated_at": "2017-08-23T16:00:00.000Z",
                        "canteen_id": 1,
                        "average_rating": 2.75
                        "image": {
                            "id": 1,
                            "url": "/images/image.jpeg",
                            "mimetype": "image/jpeg",
                            "liked_users": [3, 4, 45, 47, 52],
                            "user_id": 5,
                            "stall_id": 1,
                            "created_at": "2017-08-23T16:00:00.000Z",
                            "updated_at": "2017-08-23T16:00:00.000Z"
                        }
                    }
                ]
            }

+ Response 200 (application/json)

    + Body

            {
                "stalls": []
            }

+ Response 502 (application/json)

    + Body
            {
                "statusCode": 502,
                "error": "Bad Gateway",
                "message": "Problems connecting to database."
            }

+ Response 502 (application/json)

    + Body
            {
                "statusCode": 502,
                "error": "Bad Gateway",
                "message": "Unknown Sequelize error."
            }

## Stall [/stalls/{id}]

### (DONE) Get a Stall [GET]

+ Request JSON

    + Headers

            Authorization: Bearer <jwt>
            Accept: application/json

+ Response 200 (application/json)

    + Body

            {
                "stall": {
                    "id": 1,
                    "name": "Dickson's North Indian Halal Food",
                    "created_at": "2017-08-23T16:00:00.000Z",
                    "updated_at": "2017-08-23T16:00:00.000Z",
                    "canteen_id": 1,
                    "average_rating": 2.75
                }
            }

+ Response 404 (application/json)

    + Body
            {
                "statusCode": 404,
                "error": "Not Found",
                "message": "Record not found."
            }

+ Response 502 (application/json)

    + Body
            {
                "statusCode": 502,
                "error": "Bad Gateway",
                "message": "Problems connecting to database."
            }

+ Response 502 (application/json)

    + Body
            {
                "statusCode": 502,
                "error": "Bad Gateway",
                "message": "Unknown Sequelize error."
            }

## Ratings Collection [/stalls/{id}/ratings]

### (DONE) Get all Ratings of a Stall [GET]

+ Request JSON

    + Headers

            Authorization: Bearer <jwt>
            Accept: application/json

+ Response 200 (application/json)

    + Body

            {
                "ratings": [
                    {
                        "id": 2,
                        "value": 2,
                        "user_id": "8775234563",
                        "created_at": "2017-08-23T16:00:00.000Z",
                        "updated_at": "2017-08-23T16:00:00.000Z",
                        "stall_id": 1
                    }
                ]
            }

+ Response 200 (application/json)

    + Body

            {
                "ratings": []
            }

+ Response 502 (application/json)

    + Body
            {
                "statusCode": 502,
                "error": "Bad Gateway",
                "message": "Problems connecting to database."
            }

+ Response 502 (application/json)

    + Body
            {
                "statusCode": 502,
                "error": "Bad Gateway",
                "message": "Unknown Sequelize error."
            }

### (NOT DONE) Add user Ratings to a Stall [POST]

+ Request JSON

    + Headers

            Authorization: Bearer <jwt>
            Accept: application/json

    + Body

            {
                "value": 3
            }

+ Response 200 (application/json)

## Images Collection [/stalls/{id}/images]

### (NOT DONE) Get all Images of a Stall [GET]

+ Request JSON

    + Headers

            Authorization: Bearer <jwt>
            Accept: application/json

+ Response 200 (application/json)

    + Body

            {
                "images": [
                    {
                        "id": 1,
                        "url": "/images/image.jpeg",
                        "mimetype": "image/jpeg",
                        "liked_users": [3, 4, 45, 47, 52],
                        "user_id": 5,
                        "stall_id": 1,
                        "created_at": "2017-08-23T16:00:00.000Z",
                        "updated_at": "2017-08-23T16:00:00.000Z"
                    }
                ]
            }

# Group Users

## Appointment Collection [/users/{id}/appointments]

### (DONE) Get all appointments of a User [GET]

+ Request JSON

    + Headers

            Authorization: Bearer <jwt>
            Accept: application/json

+ Response 200 (application/json)

    + Body

            {
                "appointments": [
                    {
                        "id": 1,
                        "attendees": ["336567", "787686", "39893", "579879"],
                        "canteen_id": 1,
                        "user_id": "23241",
                        "start_time": "140920171300",
                        "end_time": "140920171400",
                        "created_at": "2017-08-23T16:00:00.000Z",
                        "updated_at": "2017-08-23T16:00:00.000Z",
                    }
                ]
            }

+ Response 200 (application/json)

    + Body

            {
                "appointments": []
            }

+ Response 502 (application/json)

    + Body
            {
                "statusCode": 502,
                "error": "Bad Gateway",
                "message": "Problems connecting to database."
            }

+ Response 502 (application/json)

    + Body
            {
                "statusCode": 502,
                "error": "Bad Gateway",
                "message": "Unknown Sequelize error."
            }

## Image Collection [/users/{id}/images]

### (NOT DONE) Get all images uploaded by a User [GET]

+ Request JSON

    + Headers

            Authorization: Bearer <jwt>
            Accept: application/json

+ Response 200 (application/json)

    + Body

            {
                "images": [
                    {
                        "id": 1,
                        "url": "/images/image.jpeg",
                        "mimetype": "image/jpeg",
                        "liked_users": [3, 4, 45, 47, 52],
                        "user_id": 5,
                        "stall_id": 1,
                        "created_at": "2017-08-23T16:00:00.000Z",
                        "updated_at": "2017-08-23T16:00:00.000Z"
                    }
                ]
            }

# Group Images

## Image Upload [/images]

### (NOT DONE) Upload an Image [POST]

+ Request JSON

    + Headers

            Authorization: Bearer <jwt>
            Accept: multipart/form-data

+ Response 201 (application/json)

## Image [/images/{id}]

### (NOT DONE) Like an Image [PATCH]

+ Request JSON

    + Headers

            Authorization: Bearer <jwt>
            Accept: application/json

+ Response 200 (application/json)

### (NOT DONE) Delete an Image [DELETE]

+ Request JSON

    + Headers

            Authorization: Bearer <jwt>
            Accept: application/json

+ Response 200 (application/json)

# Group Appointments

## Appointment Upload [/appointments]

### (DONE) Create an Appointment [POST]

+ Request JSON

    + Headers

            Authorization: Bearer <jwt>
            Content-Type: application/json
            Accept: application/json

    + Body

            {
                "appointment": {
                    "canteen_id": 3,
                    "start_time": "2017-08-22 16:00:00+00"",
                    "end_time": "2017-08-22 18:00:00+00""
                }
            }

+ Response 201 (application/json)

            {
                "appointment": {
                    "attendees": [],
                    "id": 4,
                    "user_id": "1524106284336095",
                    "start_time": "2017-08-22T16:00:00.000Z",
                    "end_time": "2017-08-22T18:00:00.000Z",
                    "canteen_id": 3,
                    "updated_at": "2017-08-26T14:53:36.864Z",
                    "created_at": "2017-08-26T14:53:36.864Z"
                }
            }

+ Response 502 (application/json)

    + Body
            {
                "statusCode": 502,
                "error": "Bad Gateway",
                "message": "Problems connecting to database."
            }

+ Response 400 (application/json)

    + Body
            {
                "statusCode": 400,
                "error": "Bad Request",
                "message": "Request breaks database constraints."
            }

+ Response 400 (application/json)

    + Body
            {
                "statusCode": 400,
                "error": "Bad Request",
                "message": "Sequelize validation failed."
            }

+ Response 502 (application/json)

    + Body
            {
                "statusCode": 502,
                "error": "Bad Gateway",
                "message": "Unknown Sequelize error."
            }

## Appointment [/appointments/{id}]

### (DONE) Join an Appointment [PATCH]

+ Request JSON

    + Headers

            Authorization: Bearer <jwt>
            Accept: application/json

+ Response 200 (application/json)

    + Body

            {
                "appointment": {
                    "attendees": ["43255343"],
                    "id": 4,
                    "user_id": "1524106284336095",
                    "start_time": "2017-08-22T16:00:00.000Z",
                    "end_time": "2017-08-22T18:00:00.000Z",
                    "canteen_id": 3,
                    "updated_at": "2017-08-26T14:53:36.864Z",
                    "created_at": "2017-08-26T14:53:36.864Z"
                }
            }


+ Response 404 (application/json)

    + Body
            {
                "statusCode": 404,
                "error": "Not Found",
                "message": "Record not found."
            }

+ Response 403 (application/json)

    + Body
            {
                "statusCode": 403,
                "error": "Forbidden",
                "message": "Host cannot join his/her own appointment."
            }

+ Response 403 (application/json)

    + Body
            {
                "statusCode": 403,
                "error": "Forbidden",
                "message": "User has already joined appointment."
            }

+ Response 502 (application/json)

    + Body
            {
                "statusCode": 502,
                "error": "Bad Gateway",
                "message": "Problems connecting to database."
            }

+ Response 400 (application/json)

    + Body
            {
                "statusCode": 400,
                "error": "Bad Request",
                "message": "Request breaks database constraints."
            }

+ Response 400 (application/json)

    + Body
            {
                "statusCode": 400,
                "error": "Bad Request",
                "message": "Sequelize validation failed."
            }

+ Response 502 (application/json)

    + Body
            {
                "statusCode": 502,
                "error": "Bad Gateway",
                "message": "Unknown Sequelize error."
            }

### (DONE) Delete an Appointment [DELETE]

+ Request JSON

    + Headers

            Authorization: Bearer <jwt>
            Accept: application/json

+ Response 204 (application/json)

+ Response 404 (application/json)

    + Body
            {
                "statusCode": 404,
                "error": "Not Found",
                "message": "Record not found."
            }

+ Response 502 (application/json)

    + Body
            {
                "statusCode": 502,
                "error": "Bad Gateway",
                "message": "Problems connecting to database."
            }

+ Response 400 (application/json)

    + Body
            {
                "statusCode": 400,
                "error": "Bad Request",
                "message": "Request breaks database constraints."
            }

+ Response 400 (application/json)

    + Body
            {
                "statusCode": 400,
                "error": "Bad Request",
                "message": "Sequelize validation failed."
            }